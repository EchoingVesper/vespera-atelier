name: CI/CD Pipeline (Minimal)

on:
  push:
    branches: [ main, develop, 'feature/**', 'release/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Test vespera-scriptorium package
  test-vespera-scriptorium:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('packages/vespera-scriptorium/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install V2 dependencies
      working-directory: packages/vespera-scriptorium
      run: |
        python3 -m pip install --upgrade pip || python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      working-directory: packages/vespera-scriptorium
      run: |
        black --check *.py || true
        isort --check-only *.py || true
    
    - name: Run V2 type checking
      working-directory: packages/vespera-scriptorium
      run: |
        # mypy roles/ tasks/ --ignore-missing-imports || true  # Disabled for V2 initially
        echo "Type checking skipped for V2 development phase"
    
    - name: Run MCP tests
      working-directory: packages/vespera-scriptorium
      run: |
        # Install additional requirements
        if [ -f "requirements_bindery.txt" ]; then
          pip install -r requirements_bindery.txt
        fi

        # Test FastMCP tool registration
        if [ -f "test_fastmcp_registration.py" ]; then
          python test_fastmcp_registration.py
        fi

        # Run MCP mock tests
        if [ -f "test_bindery_tools_mock.py" ]; then
          python test_bindery_tools_mock.py || true
        fi

        # Test MCP server startup (with timeout for server process)
        if [ -f "mcp_server.py" ]; then
          timeout 5 python mcp_server.py || [ $? -eq 124 ]
        fi
    
    - name: Verify MCP imports
      working-directory: packages/vespera-scriptorium
      run: |
        python -c "from models import TaskInput, TaskOutput; from resilience import ResilienceManager; print('MCP imports successful')"

  # Test Obsidian plugin (DISABLED - plugin not yet implemented)
  # test-obsidian-plugin:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   strategy:
  #     matrix:
  #       node-version: ['18', '20']
  #   
  #   steps:
  #   - uses: actions/checkout@v5
  #     with:
  #       fetch-depth: 0
  #   
  #   - name: Setup Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #   
  #   - name: Install pnpm
  #     uses: pnpm/action-setup@v4
  #     with:
  #       version: 8.15.0
  #   
  #   - name: Install dependencies
  #     working-directory: plugins/Obsidian/Vespera-Scriptorium
  #     run: |
  #       pnpm install || npm install
  #   
  #   - name: Run linting
  #     working-directory: plugins/Obsidian/Vespera-Scriptorium
  #     run: |
  #       pnpm run lint || npm run lint || echo "Linting not configured"
  #   
  #   - name: Run type checking
  #     working-directory: plugins/Obsidian/Vespera-Scriptorium
  #     run: |
  #       pnpm run type-check || npm run type-check || echo "Type checking not configured"
  #   
  #   - name: Run tests
  #     working-directory: plugins/Obsidian/Vespera-Scriptorium
  #     run: |
  #       pnpm test || npm test || echo "Tests not configured"

  # Build and verify
  build:
    runs-on: ubuntu-latest
    needs: [test-vespera-scriptorium]  # Only depends on scriptorium tests now
    timeout-minutes: 20
    
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Set up Python for V2 build
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Verify MCP system structure
      working-directory: packages/vespera-scriptorium
      run: |
        # Verify files exist
        ls -la mcp_server.py bindery_client.py models.py resilience.py || true

        # Install requirements
        pip install -r requirements.txt
        if [ -f "requirements_bindery.txt" ]; then
          pip install -r requirements_bindery.txt
        fi

        # Verify imports
        python -c "from models import TaskInput; from bindery_client import BinderyClient; from resilience import ResilienceManager; print('MCP system imports successful')"
    
    # Obsidian plugin build (DISABLED - plugin not yet implemented)
    # - name: Setup Node.js for Obsidian build
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '20'
    # 
    # - name: Build Obsidian plugin
    #   working-directory: plugins/Obsidian/Vespera-Scriptorium
    #   run: |
    #     npm install || pnpm install
    #     npm run build || pnpm run build || echo "Build not configured"
    
    - name: Upload V2 build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mcp-build-artifacts
        path: |
          packages/vespera-scriptorium/mcp_server.py
          packages/vespera-scriptorium/bindery_client.py
          packages/vespera-scriptorium/models.py
          packages/vespera-scriptorium/resilience.py
          packages/vespera-scriptorium/requirements.txt
          packages/vespera-scriptorium/requirements_bindery.txt