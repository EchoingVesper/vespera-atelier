name: Code Quality

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'packages/vespera-scriptorium/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'packages/vespera-scriptorium/**'

defaults:
  run:
    working-directory: packages/vespera-scriptorium

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip || python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run black formatting check
      run: |
        black --check vespera_scriptorium/
    
    - name: Run isort import sorting check
      run: |
        isort --check-only vespera_scriptorium/
    
    - name: Run flake8 linting
      run: |
        flake8 vespera_scriptorium/
    
    - name: Run mypy type checking
      continue-on-error: true  # Allow mypy to fail for now
      run: |
        mypy vespera_scriptorium/

  typescript-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest
    
    - name: Install workspace dependencies
      run: pnpm install
      working-directory: ./
    
    - name: Run TypeScript checks on utilities
      working-directory: packages/vespera-utilities
      continue-on-error: true  # Allow TypeScript to fail for now
      run: |
        if [ -f "package.json" ] && grep -q "type-check\|typecheck" package.json; then
          pnpm run type-check || pnpm run typecheck || echo "TypeScript check command not found"
        else
          echo "No TypeScript checks configured for utilities"
        fi
    
    - name: Run TypeScript checks on Obsidian plugin
      working-directory: plugins/Obsidian/Vespera-Scriptorium
      continue-on-error: true  # Allow TypeScript to fail for now
      run: |
        if [ -f "package.json" ] && [ -f "tsconfig.json" ]; then
          pnpm run build || echo "Build failed - may indicate TypeScript issues"
        else
          echo "No TypeScript configuration found for Obsidian plugin"
        fi

  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Check documentation completeness
      run: |
        echo "Checking for missing docstrings..."
        uv run python -c "
        import ast
        import os
        
        def check_docstrings(filepath):
            with open(filepath, 'r') as f:
                tree = ast.parse(f.read())
            
            missing = []
            for node in ast.walk(tree):
                if isinstance(node, (ast.FunctionDef, ast.ClassDef, ast.AsyncFunctionDef)):
                    if not ast.get_docstring(node):
                        missing.append(f'{filepath}:{node.lineno} - {node.name}')
            return missing
        
        missing_docs = []
        for root, dirs, files in os.walk('vespera_scriptorium'):
            for file in files:
                if file.endswith('.py') and not file.startswith('__'):
                    filepath = os.path.join(root, file)
                    missing_docs.extend(check_docstrings(filepath))
        
        if missing_docs:
            print('Missing docstrings:')
            for item in missing_docs[:10]:  # Show first 10
                print(f'  {item}')
            if len(missing_docs) > 10:
                print(f'  ... and {len(missing_docs) - 10} more')
        else:
            print('All functions and classes have docstrings!')
        "
    
    - name: Validate README and docs
      run: |
        echo "Checking documentation files..."
        test -f README.md || (echo "Missing README.md" && exit 1)
        test -f CLAUDE.md || (echo "Missing CLAUDE.md" && exit 1)
        test -f CHANGELOG.md || (echo "Missing CHANGELOG.md" && exit 1)
        echo "Documentation files present âœ“"

  complexity:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
        uv add radon
    
    - name: Check cyclomatic complexity
      run: |
        echo "Checking code complexity..."
        uv run radon cc vespera_scriptorium -a -nc --total-average
        
    - name: Check maintainability index
      run: |
        echo "Checking maintainability index..."
        uv run radon mi vespera_scriptorium -nc

  performance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run performance tests
      run: |
        if [ -d "tests/performance" ]; then
          uv run pytest tests/performance/ -v --tb=short
        else
          echo "No performance tests found, skipping..."
        fi

  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Check for known vulnerabilities
      run: |
        uv add safety
        uv run safety check --json || echo "Safety check completed with warnings"
        
    - name: Check dependencies freshness
      run: |
        echo "Checking dependency versions..."
        uv tree
        echo "UV lock file status:"
        uv lock --check || echo "Lock file may need updates"