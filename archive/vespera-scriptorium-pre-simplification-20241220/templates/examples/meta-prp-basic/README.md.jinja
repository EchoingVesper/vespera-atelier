# {{project_name}} Meta-PRP

## Project Overview
{{project_description}}

**Feature Area**: {{feature_area}}
**Priority Level**: {{priority_level}}
**Primary Assignee**: {{assignee}}

## Generated Workflow Structure

This meta-PRP creates a systematic workflow with the following phases:

### 1. Research & Analysis Phase
- **Role**: Researcher
- **Objective**: Establish comprehensive understanding of requirements and existing patterns
- **Deliverables**: Research summary, requirements analysis

### 2. Architecture Design Phase  
- **Role**: Architect
- **Objective**: Design robust system architecture and technical specifications
- **Deliverables**: Architecture design, technical specifications
- **Dependencies**: Research phase completion

### 3. Implementation Phase
- **Role**: Coder
- **Objective**: Implement core functionality in {{feature_area}} feature area
- **Deliverables**: Working code, documentation
- **Dependencies**: Architecture design completion

### 4. Testing & Validation Phase
- **Role**: Tester  
- **Objective**: Ensure quality and reliability through comprehensive testing
- **Deliverables**: Test suite, validation reports
- **Dependencies**: Implementation completion

{% if include_security_review %}
### 5. Security Review Phase
- **Role**: Reviewer
- **Objective**: Security analysis and vulnerability assessment
- **Deliverables**: Security review report, remediation plan
- **Dependencies**: Testing completion
{% endif %}

## Quality Gates

- **Research Complete**: 8/10 completeness, 9/10 accuracy
- **Architecture Complete**: 9/10 consistency, 8/10 security, 8/10 maintainability  
- **Implementation Complete**: 9/10 functionality, 8/10 code quality, 7/10 test coverage

## Executive Dysfunction Support

This workflow is designed with executive dysfunction in mind:
- ✅ **Pre-defined roles** - No decision paralysis about specialist assignments
- ✅ **Clear dependencies** - Sequential workflow with obvious next steps
- ✅ **Quality targets** - Specific, measurable success criteria
- ✅ **Progress tracking** - Multiple granularities for momentum preservation
- ✅ **Auto-preservation** - Git commits preserve work at each completion

---

*Generated by Vespera V2 Template System*