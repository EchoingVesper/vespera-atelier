[tool:pytest]
# Pytest configuration for Vespera Scriptorium MCP server testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts =
    # Verbose output with test names and results
    -v
    # Show short traceback format (less clutter)
    --tb=short
    # Show extra test summary info (failed, error, skipped, xfailed, xpassed)
    -ra
    # Capture stdout/stderr during test execution
    --capture=sys
    # Enable async test support
    --asyncio-mode=auto
    # Show local variables in tracebacks (helpful for debugging)
    --showlocals
    # Warn on missing fixtures
    --strict-markers
    # Coverage reporting with branch coverage
    --cov=mcp_server
    --cov=bindery_client
    --cov=models
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:coverage_html
    --cov-report=xml:coverage.xml
    # Fail if coverage is below threshold
    --cov-fail-under=80

# Async test configuration
asyncio_mode = auto

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    mcp: Tests specifically for MCP protocol compliance
    slow: Tests that take longer to run (excluded by default)
    network: Tests that require network connectivity
    bindery: Tests that interact with Bindery backend
    interruption: Tests for interruption handling
    error_handling: Tests for error scenarios

# Test timeout (prevent hanging tests)
timeout = 300

# Minimum Python version
minversion = 3.9

# Filter warnings
filterwarnings =
    # Ignore deprecation warnings from dependencies
    ignore::DeprecationWarning
    # Ignore specific asyncio warnings during testing
    ignore::RuntimeWarning:asyncio
    # Treat our own warnings as errors
    error::UserWarning:mcp_server
    error::UserWarning:bindery_client

# Test output formatting
console_output_style = progress
junit_family = xunit2

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test file patterns to ignore
ignore =
    setup.py
    conftest.py
    legacy/