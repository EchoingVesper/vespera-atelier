[project]
name = "vespera-scriptorium"
version = "1.0.0-alpha.1"
description = "Vespera Scriptorium - An intelligent platform for document-centric orchestration, task management, and creative workflows"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.9.0",
    "pydantic>=2.0.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    "aiofiles>=23.0.0",
    "psutil>=5.9.0",
    "filelock>=3.12.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.10.0",
    "aiosqlite>=0.19.0",
    "typer>=0.9.0",
    "rich>=13.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-timeout>=2.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "coverage>=7.0.0",
    "pre-commit>=3.0.0"
]

[project.scripts]
vespera-scriptorium = "vespera_scriptorium.__main__:main_sync"
vespera-scriptorium-cli = "vespera_scriptorium_cli.__main__:main"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
norecursedirs = ["tests/archives", "tests/archives/*"]
# Disable output capture to prevent truncation and show verbose output
addopts = "-s -v --tb=short"
# Alternative configuration options (comment/uncomment as needed):
# addopts = "--capture=no -v --tb=short"                    # Alternative no-capture method
# addopts = "--show-capture=all -v --tb=short"              # Show all captured output  
# addopts = "-s -v --tb=short --maxfail=1"                  # Stop on first failure
# addopts = "-s -v --tb=short -p no:anyio -p no:asyncio"    # Disable async plugins
minversion = "1.7.0"
# Markers for test categorization
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "migration: marks tests as migration-related tests"
]
# Timeout settings to prevent hanging
timeout = 300
# Filter warnings to reduce noise
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "error::ResourceWarning"  # Make ResourceWarnings fail tests to catch connection leaks
]
