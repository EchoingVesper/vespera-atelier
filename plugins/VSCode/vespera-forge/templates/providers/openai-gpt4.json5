{
  // OpenAI GPT-4 Provider Template
  template_id: "openai-gpt4",
  name: "OpenAI GPT-4",
  description: "OpenAI GPT-4 model with advanced reasoning capabilities",
  version: "1.0.0",
  category: "llm_provider",
  
  provider_config: {
    provider_type: "openai",
    model: "gpt-4",
    api_endpoint: "https://api.openai.com/v1",
    supports_streaming: true,
    supports_functions: true,
    max_tokens: 4096,
    context_window: 8192
  },
  
  authentication: {
    type: "api_key",
    key_name: "apiKey",
    header: "Authorization",
    format: "Bearer {key}"
  },
  
  ui_schema: {
    config_fields: [
      {
        name: "apiKey",
        type: "password",
        required: true,
        label: "API Key",
        placeholder: "sk-...",
        description: "Your OpenAI API key from https://platform.openai.com/api-keys",
        validation: {
          pattern: "^sk-[a-zA-Z0-9]{48,}$",
          min: 20,
          message: "OpenAI API keys start with 'sk-' followed by at least 48 characters"
        }
      },
      {
        name: "model",
        type: "select",
        required: false,
        label: "Model",
        description: "GPT model to use",
        default: "gpt-4o",
        validation: {
          options: [
            "gpt-4o",
            "gpt-4o-mini",
            "gpt-4-turbo",
            "gpt-4",
            "gpt-3.5-turbo"
          ]
        }
      },
      {
        name: "baseUrl",
        type: "text",
        required: false,
        label: "Custom Base URL",
        placeholder: "https://api.openai.com/v1",
        description: "Custom API endpoint (leave empty for default)",
        validation: {
          pattern: "^https?://.*",
          message: "Must be a valid HTTP/HTTPS URL"
        }
      },
      {
        name: "temperature",
        type: "number",
        required: false,
        label: "Temperature",
        placeholder: "0.7",
        description: "Controls randomness in responses (0.0-2.0)",
        default: 0.7,
        validation: {
          min: 0.0,
          max: 2.0,
          step: 0.1,
          message: "Temperature must be between 0.0 and 2.0"
        }
      },
      {
        name: "maxTokens",
        type: "number",
        required: false,
        label: "Max Tokens",
        placeholder: "4096",
        description: "Maximum tokens in response",
        default: 4096,
        validation: {
          min: 1,
          max: 128000,
          step: 1,
          message: "Max tokens must be between 1 and 128,000"
        }
      },
      {
        name: "systemPrompt",
        type: "textarea",
        required: false,
        label: "System Prompt",
        placeholder: "You are a helpful assistant...",
        description: "Default system message for conversations",
        validation: {
          max: 2000,
          message: "System prompt must be under 2000 characters"
        }
      },
      {
        name: "enableFunctions",
        type: "checkbox",
        required: false,
        label: "Enable Function Calling",
        description: "Allow the model to call functions/tools",
        default: true
      }
    ]
  },
  
  capabilities: {
    streaming: true,
    function_calling: true,
    image_analysis: true,
    code_execution: false,
    web_search: false
  },
  
  // Configuration validation schema
  config_schema: {
    type: "object",
    required: ["apiKey"],
    properties: {
      apiKey: {
        type: "string",
        pattern: "^sk-[a-zA-Z0-9]{48,}$",
        description: "OpenAI API key"
      },
      model: {
        type: "string",
        enum: ["gpt-4o", "gpt-4o-mini", "gpt-4-turbo", "gpt-4", "gpt-3.5-turbo"]
      },
      baseUrl: {
        type: "string",
        format: "uri"
      },
      temperature: {
        type: "number",
        minimum: 0.0,
        maximum: 2.0
      },
      maxTokens: {
        type: "number",
        minimum: 1,
        maximum: 128000
      },
      systemPrompt: {
        type: "string",
        maxLength: 2000
      },
      enableFunctions: {
        type: "boolean"
      }
    }
  }
}