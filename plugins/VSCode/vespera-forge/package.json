{
  "name": "vespera-forge",
  "displayName": "Vespera Forge",
  "description": "AI-enhanced content management and task orchestration for VS Code with collaborative CRDT editing",
  "version": "0.0.1",
  "publisher": "vespera-atelier",
  "license": "AGPL-3.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/vespera-atelier/vespera-atelier.git",
    "directory": "plugins/VSCode/vespera-forge"
  },
  "bugs": {
    "url": "https://github.com/vespera-atelier/vespera-atelier/issues"
  },
  "homepage": "https://github.com/vespera-atelier/vespera-atelier/tree/main/plugins/VSCode/vespera-forge",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other",
    "Data Science",
    "Machine Learning",
    "Notebooks",
    "Visualization"
  ],
  "keywords": [
    "ai",
    "content-management",
    "task-orchestration",
    "crdt",
    "collaborative",
    "rust",
    "automation",
    "vespera"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vespera-forge.initialize",
        "title": "Initialize Vespera Forge",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.open",
        "title": "Open Vespera Forge",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.createContent",
        "title": "Create Content",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.testCommand",
        "title": "Test Command",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.openTaskManager",
        "title": "Open Task Manager",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.configureBindery",
        "title": "Configure Bindery",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.refreshTaskTree",
        "title": "Refresh Task Tree",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.createSubtask",
        "title": "Create Subtask",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.completeTask",
        "title": "Complete Task",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.deleteTask",
        "title": "Delete Task",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.inlineTest",
        "title": "Inline Test Command",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.openChatPanel",
        "title": "Open Chat Panel",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.openAIAssistant",
        "title": "Open AI Assistant",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.configureChatProviders",
        "title": "Configure Chat Providers",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.clearChatHistory",
        "title": "Clear Chat History",
        "category": "Vespera Forge"
      },
      {
        "command": "vespera-forge.createChatSession",
        "title": "Create Chat Session",
        "category": "Vespera Forge Chat"
      },
      {
        "command": "vespera-forge.switchChatSession",
        "title": "Switch Chat Session",
        "category": "Vespera Forge Chat"
      },
      {
        "command": "vespera-forge.exportChatSessions",
        "title": "Export Chat Sessions",
        "category": "Vespera Forge Chat"
      },
      {
        "command": "vespera-forge.importChatSessions",
        "title": "Import Chat Sessions",
        "category": "Vespera Forge Chat"
      },
      {
        "command": "vespera-forge.showChatStats",
        "title": "Show Chat Statistics",
        "category": "Vespera Forge Chat"
      }
    ],
    "keybindings": [
      {
        "command": "vespera-forge.createContent",
        "key": "ctrl+alt+t",
        "when": "vespera-forge:enabled"
      },
      {
        "command": "vespera-forge.testCommand",
        "key": "ctrl+alt+shift+t",
        "when": "vespera-forge:enabled"
      },
      {
        "command": "vespera-forge.openChatPanel",
        "key": "ctrl+alt+c",
        "when": "vespera-forge:enabled"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "vesperaForgeExplorer",
          "name": "Vespera Forge",
          "when": "vespera-forge:enabled"
        }
      ],
      "vespera-forge": [
        {
          "id": "vesperaForge.navigatorView",
          "type": "webview",
          "name": "Codex Navigator",
          "when": "vespera-forge:enabled"
        }
      ],
      "vespera-forge-assistant": [
        {
          "id": "vespera-forge.aiAssistant",
          "type": "webview",
          "name": "AI Assistant",
          "when": "vespera-forge:enabled"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vespera-forge",
          "title": "Vespera Forge",
          "icon": "$(symbol-namespace)"
        },
        {
          "id": "vespera-forge-assistant",
          "title": "Vespera AI",
          "icon": "$(comment-discussion)"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "vespera-forge.refreshTaskTree",
          "when": "view == vesperaForgeTaskTree",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "vespera-forge.createSubtask",
          "when": "view == vesperaForgeTaskTree && viewItem =~ /task/",
          "group": "1_actions"
        },
        {
          "command": "vespera-forge.completeTask",
          "when": "view == vesperaForgeTaskTree && viewItem =~ /task/ && viewItem =~ /status-todo|status-doing/",
          "group": "1_actions"
        },
        {
          "command": "vespera-forge.deleteTask",
          "when": "view == vesperaForgeTaskTree && viewItem =~ /task/",
          "group": "2_destructive"
        }
      ]
    },
    "configuration": {
      "title": "Vespera Forge",
      "properties": {
        "vesperaForge.enableAutoStart": {
          "type": "boolean",
          "default": true,
          "description": "Automatically start Vespera Forge when a workspace is opened"
        },
        "vesperaForge.ui.useNewFramework": {
          "type": "boolean",
          "default": false,
          "description": "Use the new three-panel Vespera Forge UI framework (experimental). Set to false to use legacy UI."
        },
        "vesperaForge.rustBinderyPath": {
          "type": "string",
          "default": "",
          "description": "Path to Rust Bindery executable"
        },
        "vesperaForge.chat.providers": {
          "type": "object",
          "default": {},
          "description": "Chat provider configurations"
        },
        "vesperaForge.chat.ui.layout": {
          "type": "string",
          "default": "embedded",
          "enum": [
            "embedded",
            "panel",
            "sidebar"
          ],
          "description": "Chat UI layout preference"
        },
        "vesperaForge.chat.ui.position": {
          "type": "string",
          "default": "right",
          "enum": [
            "left",
            "right",
            "bottom"
          ],
          "description": "Chat UI position"
        },
        "vesperaForge.chat.ui.theme": {
          "type": "string",
          "default": "auto",
          "enum": [
            "auto",
            "light",
            "dark"
          ],
          "description": "Chat UI theme"
        },
        "vesperaForge.chat.interaction.streaming": {
          "type": "boolean",
          "default": true,
          "description": "Enable streaming responses"
        },
        "vesperaForge.security.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable enterprise-grade security features"
        },
        "vesperaForge.security.level": {
          "type": "string",
          "default": "standard",
          "enum": [
            "strict",
            "standard",
            "permissive"
          ],
          "description": "Security validation level"
        },
        "vesperaForge.security.auditLogging": {
          "type": "boolean",
          "default": true,
          "description": "Enable comprehensive audit logging"
        },
        "vesperaForge.security.processIsolation": {
          "type": "boolean",
          "default": true,
          "description": "Enable process isolation for Bindery operations"
        },
        "vesperaForge.security.maxProcessMemoryMB": {
          "type": "number",
          "default": 256,
          "description": "Maximum memory limit for processes (MB)"
        },
        "vesperaForge.toolManagement.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable secure tool override management"
        },
        "vesperaForge.toolManagement.allowedTools": {
          "type": "array",
          "default": [
            "Read",
            "Write",
            "Edit",
            "MultiEdit",
            "Glob",
            "Grep",
            "mcp__vespera-scriptorium__mcp_read_file",
            "mcp__vespera-scriptorium__mcp_write_file",
            "mcp__vespera-scriptorium__mcp_list_files"
          ],
          "items": {
            "type": "string"
          },
          "description": "List of allowed Claude Code tools"
        },
        "vesperaForge.toolManagement.blockedTools": {
          "type": "array",
          "default": [
            "Bash",
            "WebFetch"
          ],
          "items": {
            "type": "string"
          },
          "description": "List of blocked Claude Code tools for security"
        },
        "vesperaForge.toolManagement.enableRollback": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic rollback on tool override failures"
        },
        "vesperaForge.toolManagement.maxOverrides": {
          "type": "number",
          "default": 50,
          "description": "Maximum number of concurrent tool overrides"
        },
        "vesperaForge.fileOperations.enableRustFileOps": {
          "type": "boolean",
          "default": true,
          "description": "Enable high-performance rust-file-ops for file operations"
        },
        "vesperaForge.fileOperations.securityValidation": {
          "type": "boolean",
          "default": true,
          "description": "Enable security validation for all file operations"
        },
        "vesperaForge.fileOperations.allowedDirectories": {
          "type": "array",
          "default": [
            "${workspaceFolder}",
            "/tmp/vespera-temp"
          ],
          "items": {
            "type": "string"
          },
          "description": "List of allowed directories for file operations"
        },
        "vesperaForge.fileOperations.blockedDirectories": {
          "type": "array",
          "default": [
            "/etc",
            "/sys",
            "/proc",
            "/root"
          ],
          "items": {
            "type": "string"
          },
          "description": "List of blocked directories for security"
        },
        "vesperaForge.fileOperations.maxFileSize": {
          "type": "number",
          "default": 52428800,
          "description": "Maximum file size for operations (bytes, default 50MB)"
        },
        "vesperaForge.mcp.validation.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable MCP message validation"
        },
        "vesperaForge.mcp.validation.maxMessageSize": {
          "type": "number",
          "default": 52428800,
          "description": "Maximum MCP message size (bytes, default 50MB)"
        },
        "vesperaForge.mcp.validation.maxObjectDepth": {
          "type": "number",
          "default": 100,
          "description": "Maximum object nesting depth in MCP messages"
        },
        "vesperaForge.mcp.rateLimiting.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable MCP request rate limiting"
        },
        "vesperaForge.mcp.rateLimiting.maxRequestsPerMinute": {
          "type": "number",
          "default": 1000,
          "description": "Maximum MCP requests per minute per client"
        },
        "vesperaForge.performance.targetSecurityOverhead": {
          "type": "number",
          "default": 2,
          "description": "Target security overhead percentage (should be <2%)"
        },
        "vesperaForge.performance.enableMetrics": {
          "type": "boolean",
          "default": true,
          "description": "Enable performance metrics collection"
        },
        "vesperaForge.performance.highThroughputMode": {
          "type": "boolean",
          "default": true,
          "description": "Enable high-throughput optimizations for batch operations"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "test": "vscode-test",
    "test:coverage": "c8 --reporter=text --reporter=html --reporter=lcov npm test",
    "coverage": "c8 --reporter=text --reporter=html npm test",
    "coverage:report": "c8 report --reporter=text --reporter=html",
    "typecheck": "tsc --noEmit",
    "typecheck:strict": "tsc --noEmit --strict",
    "lint:types": "tsc --noEmit && eslint src --ext .ts",
    "clean": "rimraf dist out coverage .nyc_output",
    "dev": "npm run clean && npm run watch"
  },
  "dependencies": {
    "@anthropic-ai/claude-code": "^1.0.100",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@tanstack/react-query": "^5.82.0",
    "@types/node-fetch": "^2.6.13",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "embla-carousel-react": "^8.6.0",
    "fast-xml-parser": "^4.5.0",
    "framer-motion": "^12.23.2",
    "json5": "^2.2.3",
    "lucide-react": "^0.525.0",
    "node-fetch": "^3.3.2",
    "react": "^19.0.0",
    "react-day-picker": "^9.11.0",
    "react-dom": "^19.0.0",
    "react-resizable-panels": "^3.0.3",
    "recharts": "^3.2.1",
    "tailwind-merge": "^3.3.1",
    "uuid": "^9.0.1",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4.0.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.5.0",
    "@types/react": "^19.0.0",
    "@types/react-dom": "^19.0.0",
    "@types/uuid": "^9.0.8",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "autoprefixer": "^10.4.20",
    "c8": "^10.1.3",
    "css-loader": "^6.8.1",
    "eslint": "^9.32.0",
    "istanbul": "^0.4.5",
    "nyc": "^17.1.0",
    "postcss": "^8.4.49",
    "postcss-loader": "^7.3.3",
    "rimraf": "^6.0.0",
    "source-map-support": "^0.5.21",
    "style-loader": "^3.3.3",
    "tailwindcss": "^4.0.0",
    "ts-loader": "^9.5.2",
    "tw-animate-css": "^1.3.5",
    "typescript": "^5.6.0",
    "webpack": "^5.101.0",
    "webpack-cli": "^6.0.1"
  }
}
